
# This makefile creates a shared library.  It needs the open server header
# files usually installed in $mddev directory.
# This make file can be used for generating the template ESPs.
# It references the following macros:
#
# Include path where ospublic.h etc reside. You may have them in the
# standard places like /usr/lib etc.
# Place where the shared library will be generated.
# Directory where the source code is kept.

CC              = CC
CC_HOME         = /opt/SUNWspro/prod
BUDE_HOME       = /app/budedev
BSVC                 = buildserver

INCLUDEPATH     = -I. \
				-I$(CC_HOME)/include \
				-I$(ORACLE_HOME)/rdbms/demo \
				-I$(ORACLE_HOME)/rdbms/public \
				-I$(TUXDIR)/include \
				-I$(BUDE_HOME)/lang/include  \
				-I$(BUDE_HOME)/syscomp/include \
				-I$(BUDE_HOME)/lang/include/base \
				-I$(BUDE_HOME)/syscomp/include/lcu \
				-I$(BUDE_HOME)/syscomp/include/mwlcu \
				-I$(BUDE_HOME)/syscomp/include/mwci \
				-I$(BUDE_HOME)/syscomp/include/udbi \
				-I$(BUDE_HOME)/syscomp/include/dynlib \
				-I$(BUDE_HOME)/syscomp/include/log4cpp


LIBPATH         = -L. -L../lib/ \
				  -L/usr/lib \
				-L/usr/local/lib \
				-L$(TUXDIR)/lib \
				-L$(ORACLE_HOME)/lib \
				-L$(ORACLE_HOME)/rdbms/lib \
				-L$(BUDE_HOME)/syscomp/lib \
				-L$(BUDE_HOME)/frame/txd-lcu/lib \
				-L$(BUDE_HOME)/syscomp/lib

ORALIB          = -locci -lclntsh -ludbi -lmwci -ldynlib  -llog4cpp -llcu
TUXLIB          = -ltux -lbuft  -lfml -lfml32 -lengine -R/usr/lib/lwp -lpthread -lposix4  -lsocket -lnsl

LIBS        = $(LIBPATH) $(ORALIB) $(TUXLIB)

DEBUGFLAG   = -DDEBUG -g

CFLAGS  = $(INCLUDEPATH) $(DEBUGFLAG) $(LIBS) -D__SUNOS__

SOURCES = mwsvcdev.cpp #mwsvctest.cpp

LINK_OBJS = -f mwsvcdev.o \
			-f mwlcu.o \
			-f lcuplugins.o \
			-f fmloperator.o \
			-f udbidbloader.o \
			-f udbidblog.o \
			-f tradestateagent.o \
			-f fmlcontext.o \
			-l "-llcu"


OBJS        = $(SOURCES:.cpp=.o)

.SUFFIXES: $(SUFFIXES) .cpp
.cpp.o:
	$(CC) $(CFLAGS) -o $@ -c $<


all:$(OBJS) tsserver mwservercrm1 mwservercrm2 mwserver smserver rmserver asserver cmserver csserver coserver

tsserver : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s TSSVC:MWSVC \
	-o tsserver \
	$(LINK_OBJS)

mwservercrm1 : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s MWSVCCRM1:MWSVC \
	-o mwservercrm1 \
	$(LINK_OBJS)
mwservercrm2 : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s MWSVCCRM2:MWSVC \
	-o mwservercrm2 \
	$(LINK_OBJS)
mwserver : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s MWSVC \
	-o mwserver \
	$(LINK_OBJS)
smserver : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s SMSVC:MWSVC \
	-o smserver \
	$(LINK_OBJS)
rmserver : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s RMSVC:MWSVC \
	-o rmserver \
	$(LINK_OBJS)
asserver : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s ASSVC:MWSVC \
	-o asserver \
	$(LINK_OBJS)
cmserver : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s CMSVC:MWSVC \
	-o cmserver \
	$(LINK_OBJS)
csserver : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s CSSVC:MWSVC \
	-o csserver \
	$(LINK_OBJS)
coserver : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s COSVC:MWSVC \
	-o coserver \
	$(LINK_OBJS)
intfserver : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s CORL_CC:MWSVC \
	-o intfserver \
	$(LINK_OBJS)
asservercbs : $(OBJS)
	$(BSVC) \
	-r Oracle_XA \
	-s ASSVCCBS:MWSVC \
	-o asservercbs \
	$(LINK_OBJS)


install:
#   tmshutdown -y
	cp *server* /app/devtux/bin
#   tmboot -y

clean:
	rm -f mwsvcdev.o *server* *.${SHARE_LIB_SUFFIX} 
	
	